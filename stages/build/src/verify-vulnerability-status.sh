#/bin/sh

base_image_registry=$1
base_image_repository=$2
base_image_tag=$3
base_image_digest=$4

if [ $# -lt 3 ]; then
    echo "Usage: $0 <base_image_registry> <base_image_repository> <base_image_tag> <base_image_digest>"
    exit 1
fi

if [ $# -lt 4 ]; then
    base_image="${base_image_registry}/${base_image_repository}:${base_image_tag}"
else
    base_image="${base_image_registry}/${base_image_repository}@${base_image_digest}"
fi

echo "Checking vulnerability report for ${base_image} excluding '-patched' images..."

if [[ $base_image_tag == *-patched ]] ; then
    echo "Skipping vulnerability check for ${base_image} because it is a patched image."
    exit 0
fi

vuln_report_digest=`oras discover \
    --artifact-type "application/sarif+json" \
    ${base_image} \
    -o json | \
    jq -r 'select (.manifests != null) | .manifests[0].digest'`

if [ "$vuln_report_digest" == "null" ] && [ "$vuln_report_digest" == "" ] && [ "$vuln_report_digest" == " " ]; then
    echo "No vulnerability report found for ${base_image}. Base images without vulnerability reports should not be used for builds."
    exit 1

echo "Vulnerability report is with digest ${vuln_report_digest} is available for ${base_image}."

# Pull the vulnerability report
vuln_report_file_name=`oras manifest fetch \
    ${base_image_registry}/${base_image_repository}@${vuln_report_digest} | \
    jq -r '.layers.[0].annotations["org.opencontainers.image.title"]'`

echo "Vulnerability report will be saved locally with name ${vuln_report_file_name}."

mkdir -p /tmp/vuln-reports
oras pull \
    --output /tmp/vuln-reports \
    ${base_image_registry}/${base_image_repository}@${vuln_report_digest}

# Get the name of the tool used to generate the report
vuln_report_tool=`cat /tmp/vuln-reports/${vuln_report_file_name} | \
    jq -r '.runs.[0].tool.driver.fullName'`

echo "Vulnerability report is generated by ${vuln_report_tool}."

# Get a count of the vulnerabilities
vuln_count=`jq -r '.runs.[0].results.[] | length' \
    /tmp/vuln-reports/${vuln_report_file_name}`

if [ "$vuln_count" -gt 0 ]; then
    echo "${vuln_report_tool} found ${vuln_count} vulnerabilities in ${base_image}."
    exit 1
else
    echo "Base image ${base_image} has no vulnerabilities. Continuing..."
fi



